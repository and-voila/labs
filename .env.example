# ::: APP CONFIGURATION :::
# This is for Next Auth. Set in your package.json. It might be similar to NEXTAUTH_URL.
# Note: We use http://localhost:3001, but http://localhost:3000 is also fine.
NEXT_PUBLIC_APP_URL=http://localhost:3000

# ::: AUTHENTICATION :::
# Configure social logins with Discord and Google. Use GitHub for repository stars.
# Need a Next Auth secret? Create one here: https://generate-secret.vercel.app/64
# Check out Clerk's docs for setup guides: https://clerk.com/docs/authentication/social-connections/{discord, google, github}
DISCORD_CLIENT_SECRET=
GITHUB_OAUTH_TOKEN=
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
NEXTAUTH_SECRET=
NEXTAUTH_URL=http://localhost:3000

# ::: DATABASE CONFIGURATION :::
# Integrating with Prisma Accelerate: https://www.prisma.io/data-platform/accelerate
# Pick your database - we like Vercel Postgres, but Neon or Tembo (https://tembo.io/) are fine choices.
# Once you have your connection string, adjust it for Prisma. Add these parameters to your database provider's string before passing it to Prisma Accelerate: ?sslmode=require&pgbouncer=true&connect_timeout=15&schema=public
# You can also opt for a standard database connection. Just update the Prisma Client in src/lib/db.ts accordingly.
DATABASE_URL=
POSTGRES_DATABASE=
POSTGRES_HOST=
POSTGRES_PASSWORD=
POSTGRES_PRISMA_URL=
POSTGRES_URL=
POSTGRES_URL_NON_POOLING=
POSTGRES_USER=

# ::: EMAIL CONFIGURATION :::
# We use Resend.com for emails. Set up an account, get your API key, and you're all set.
RESEND_API_KEY=

# ::: LEARN :::
# Set up with Mux (https://mux.com) and Uploadthing (https://uploadthing.com) for video and file handling.
# Collect your tokens and IDs from these services.
# Use a single ID or a comma-separated list for NEXT_PUBLIC_TEACHER_ID, depending on your needs.
MUX_TOKEN_ID=
MUX_TOKEN_SECRET=
NEXT_PUBLIC_TEACHER_ID=
UPLOADTHING_APP_ID=
UPLOADTHING_SECRET=

# ::: SOCIAL MEDIA VARIABLES :::
# Add your Twitter handle and website URL here for social media integration.
TWITTER_CREATOR="@RebekahRadice"
TWITTER_SITE="https://andvoila.gg"

# ::: STRIPE SUBSCRIPTIONS :::
# Configure your Stripe subscription products and record the price IDs here.
# STRIPE_API_KEY should be your Stripe Secret Key.
# Include your coupon ID if you have one. The webhook secret enables Stripe to communicate with your app.
NEXT_PUBLIC_STRIPE_BEST_MONTHLY_PRICE_ID=
NEXT_PUBLIC_STRIPE_BEST_YEARLY_PRICE_ID=
NEXT_PUBLIC_STRIPE_BETTER_MONTHLY_PRICE_ID=
NEXT_PUBLIC_STRIPE_BETTER_YEARLY_PRICE_ID=
NEXT_PUBLIC_STRIPE_TEAMS_MONTHLY_PRICE_ID=
NEXT_PUBLIC_STRIPE_TEAMS_YEARLY_PRICE_ID=
STRIPE_API_KEY=
STRIPE_COUPON_ID=
STRIPE_WEBHOOK_SECRET=

# ::: WRITE VARIABLES :::
# Vercel auth token: https://vercel.com/account/tokens
# Set up KV variables in Vercel KV or use Upstash/Redis.
# Find your Vercel Project ID here: https://vercel.com/<org>/<project>/settings
# If using a Vercel team, your Team ID is at: https://vercel.com/teams/<org>/settings
# Get your OpenAI API key from: https://platform.openai.com/account/api-keys
# RESERVED_DOMAINS: Add your internal-use domains here in a comma separated values.
# Set NEXT_PUBLIC_ROOT_DOMAIN to your website's root, like 'andvoila.gg'.
# You'll need to set up a Tiptap Pro Account to obtain the Tiptap related variables. Once you do, they're available in the Cloud Dashboard from: https://cloud.tiptap.dev/apps/settings. These are used by the Editor and for real-time collaboration.
AUTH_BEARER_TOKEN=
KV_REST_API_READ_ONLY_TOKEN=
KV_REST_API_TOKEN=
KV_REST_API_URL=
KV_URL=
NEXT_PUBLIC_ROOT_DOMAIN=
OPENAI_API_KEY=
OPENAI_ASSISTANT_ID=
PROJECT_ID_VERCEL=
RESERVED_DOMAINS=
TEAM_ID_VERCEL=
TIPTAP_APP_ID=
TIPTAP_JWT_SECRET=
TIPTAP_APP_SECRET=
TIPTAP_API_SECRET=
TIPTAP_PRO_TOKEN=
TIPTAP_JWT_STAGING=